{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { excelErrorDetection } from '@/ai/flows/excel-error-detection';\nimport { ExcelErrorDetectionOutputSchema, type ExcelErrorDetectionOutput, type HeaderData } from '@/ai/schemas';\nimport { z } from 'zod';\nimport { appendUserToSheet, getAllUsers, getAllHeaderDataFromSheet, type SignupData, type LoginData } from './googlesheets';\n\nconst AnalyzeFileResultSchema = z.object({\n  success: z.boolean(),\n  data: ExcelErrorDetectionOutputSchema.nullable(),\n  error: z.string().nullable(),\n});\n\ntype AnalyzeFileResult = z.infer<typeof AnalyzeFileResultSchema>;\n\nexport async function analyzeExcelFile(\n  formData: FormData\n): Promise<AnalyzeFileResult> {\n  const file = formData.get('file') as File | null;\n\n  if (!file) {\n    return { success: false, data: null, error: 'No file uploaded.' };\n  }\n\n  // Check file type\n  if (file.type !== 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' && file.type !== 'application/vnd.ms-excel') {\n    return { success: false, data: null, error: 'Invalid file type. Please upload an Excel file.' };\n  }\n  \n  try {\n    const bytes = await file.arrayBuffer();\n    const buffer = Buffer.from(bytes);\n    const dataUri = `data:${file.type};base64,${buffer.toString('base64')}`;\n\n    const result = await excelErrorDetection({ excelDataUri: dataUri });\n\n    return { success: true, data: result, error: null };\n  } catch (e) {\n    console.error(e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { success: false, data: null, error: `Failed to analyze file: ${errorMessage}` };\n  }\n}\n\nconst AuthResultSchema = z.object({\n    success: z.boolean(),\n    error: z.string().nullable(),\n    databaseId: z.string().nullable(),\n});\n\ntype AuthResult = z.infer<typeof AuthResultSchema>;\n\nexport async function signUpUser(userData: SignupData): Promise<AuthResult> {\n  try {\n    await appendUserToSheet(userData);\n    return { success: true, error: null, databaseId: null };\n  } catch (e) {\n    console.error('Error signing up user:', e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { success: false, error: `Failed to sign up: ${errorMessage}`, databaseId: null };\n  }\n}\n\nexport async function loginUser(credentials: LoginData): Promise<AuthResult> {\n    try {\n        const users = await getAllUsers();\n        const user = users.find(u => u.userName === credentials.userName && u.password === credentials.password);\n\n        if (user && user.databaseID) {\n            return { success: true, error: null, databaseId: user.databaseID };\n        } else if (user && !user.databaseID) {\n            return { success: false, error: 'User does not have a database configured.', databaseId: null };\n        }\n        \n        else {\n            return { success: false, error: 'Invalid username or password.', databaseId: null };\n        }\n    } catch (e) {\n        console.error('Error logging in user:', e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { success: false, error: `Failed to login: ${errorMessage}`, databaseId: null };\n    }\n}\n\n\nconst HeaderDataResultSchema = z.object({\n  success: z.boolean(),\n  data: z.array(z.custom<HeaderData>()).nullable(),\n  error: z.string().nullable(),\n});\n\ntype HeaderDataResult = z.infer<typeof HeaderDataResultSchema>;\n\nexport async function getUserHeaderData(databaseId: string): Promise<HeaderDataResult> {\n  if (!databaseId) {\n    return { success: false, data: null, error: 'Database ID is required.' };\n  }\n\n  try {\n    const data = await getAllHeaderDataFromSheet(databaseId);\n    return { success: true, data, error: null };\n  } catch (e) {\n    console.error(`Error fetching header data for db ${databaseId}:`, e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { success: false, data: null, error: `Failed to fetch header data: ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA6FsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AASA;AACA;;;AAfA;;;;;;AAiBA,MAAM,OAAO,iKAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,6LAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,6LAAC,iKAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;KAXM;AAaN,MAAM,eAAe;;IACnB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;GArBM;;QAGiC,iKAAA,CAAA,iBAAc;;;AAwBrD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH,MAAM,yBAAW,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,KAAK,CAAA,GAAA,6JAAA,CAAA,QAAW,AAAD;IAErB,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,6LAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;;AACA,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,6LAAC,oIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,6LAAC,mKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;;QAfkE;;;;QAAA;;;;AAgBlE,YAAY,WAAW,GAAG;AAE1B,MAAM,gCAAkB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;;QAjBmC;;;;QAAA;;;;AAkBnC,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/schemas.ts"],"sourcesContent":["/**\n * @fileOverview Shared Zod schemas and TypeScript types for AI flows.\n */\nimport {z} from 'zod';\n\nexport const ExcelErrorDetectionInputSchema = z.object({\n  excelDataUri: z\n    .string()\n    .describe(\n      \"The Excel file data as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type ExcelErrorDetectionInput = z.infer<typeof ExcelErrorDetectionInputSchema>;\n\nexport const ExcelErrorDetectionOutputSchema = z.object({\n  errors: z\n    .array(z.string())\n    .describe('A list of potential errors and inconsistencies found in the Excel file.'),\n  suggestions: z\n    .array(z.string())\n    .describe('A list of suggestions to fix the errors and inconsistencies.'),\n});\nexport type ExcelErrorDetectionOutput = z.infer<typeof ExcelErrorDetectionOutputSchema>;\n\n\nexport const HeaderDataSchema = z.object({\n  tpTIN: z.string().optional(),\n  branchCode: z.string().optional(),\n  rdoCode: z.string().optional(),\n  entityType: z.string().optional(),\n  cycleType: z.string().optional(),\n  monthSelect: z.string().optional(),\n  companyName: z.string().optional(),\n  lastName: z.string().optional(),\n  firstName: z.string().optional(),\n  middleName: z.string().optional(),\n  tradeName: z.string().optional(),\n  subStreet: z.string().optional(),\n  street: z.string().optional(),\n  barangay: z.string().optional(),\n  cityMunicipality: z.string().optional(),\n  province: z.string().optional(),\n  zipCode: z.string().optional(),\n});\nexport type HeaderData = z.infer<typeof HeaderDataSchema>;\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;AACD;;AAEO,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CACP;AAEN;AAGO,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtD,QAAQ,uIAAA,CAAA,IAAC,CACN,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;IACZ,aAAa,uIAAA,CAAA,IAAC,CACX,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd;AAIO,MAAM,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC1B,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC5B,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAChC,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAChC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC9B,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC3B,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACrC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC9B","debugId":null}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/header-form.tsx"],"sourcesContent":["'use client';\n\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { type HeaderData, HeaderDataSchema } from '@/ai/schemas';\n\ninterface HeaderFormProps {\n    allData: HeaderData[];\n}\n\nexport function HeaderForm({ allData }: HeaderFormProps) {\n    const form = useForm<HeaderData>({\n        resolver: zodResolver(HeaderDataSchema),\n        defaultValues: {}, // Initially empty\n    });\n\n    const handleTinSelect = (selectedTin: string) => {\n        const selectedData = allData.find(d => d.tpTIN === selectedTin);\n        if (selectedData) {\n            form.reset(selectedData); // Populate form with selected data\n        }\n    };\n\n    const onSubmit: SubmitHandler<HeaderData> = (data) => {\n        // Handle form submission, e.g., save data to the sheet\n        console.log(data);\n    };\n\n    return (\n        <div className=\"bg-white border-l h-full w-full\">\n            <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)}>\n                    <div className=\"flex items-center justify-between p-6 pb-4 border-b\">\n                        <div className=\"flex items-center gap-4\">\n                            <Label htmlFor=\"tin-select\" className=\"text-sm font-medium\">Load TIN:</Label>\n                            <Select onValueChange={handleTinSelect}>\n                                <SelectTrigger id=\"tin-select\" className=\"w-[250px]\">\n                                    <SelectValue placeholder=\"Select TIN to load data\" />\n                                </SelectTrigger>\n                                <SelectContent>\n                                    {allData.map(data => (\n                                       <SelectItem key={data.tpTIN} value={data.tpTIN!}>\n                                            {data.tpTIN} - {data.companyName || `${data.lastName}, ${data.firstName}`}\n                                       </SelectItem>\n                                    ))}\n                                </SelectContent>\n                            </Select>\n                        </div>\n                        <Button type=\"submit\">Save Header</Button>\n                    </div>\n\n                    <div className=\"p-6\">\n                        <h2 className=\"text-xl font-bold text-center mb-6\">Taxpayer Information</h2>\n                        <div className=\"grid grid-cols-1 gap-8 md:grid-cols-3\">\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle className=\"text-lg\">Tax ID and Other Details</CardTitle>\n                                </CardHeader>\n                                <CardContent className=\"space-y-4\">\n                                    <FormField control={form.control} name=\"tpTIN\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Tax Identification Number</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                     <FormField control={form.control} name=\"branchCode\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Branch Code</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                     <FormField control={form.control} name=\"rdoCode\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>RDO Code</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                    <FormField control={form.control} name=\"entityType\" render={({ field }) => (\n                                         <FormItem>\n                                            <FormLabel>Classification</FormLabel>\n                                            <Select onValueChange={field.onChange} value={field.value} key={field.value}>\n                                                <FormControl>\n                                                    <SelectTrigger><SelectValue placeholder=\"Select Classification\" /></SelectTrigger>\n                                                </FormControl>\n                                                <SelectContent>\n                                                    <SelectItem value=\"Non-Individual\">NON-INDIVIDUAL</SelectItem>\n                                                    <SelectItem value=\"individual\">INDIVIDUAL</SelectItem>\n                                                </SelectContent>\n                                            </Select>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                    <FormField control={form.control} name=\"cycleType\" render={({ field }) => (\n                                         <FormItem>\n                                            <FormLabel>Reporting Cycle</FormLabel>\n                                            <Select onValueChange={field.onChange} value={field.value} key={field.value}>\n                                                <FormControl>\n                                                    <SelectTrigger><SelectValue placeholder=\"Select Cycle\" /></SelectTrigger>\n                                                </FormControl>\n                                                <SelectContent>\n                                                    <SelectItem value=\"calendar\">CALENDAR</SelectItem>\n                                                    <SelectItem value=\"fiscal\">FISCAL</SelectItem>\n                                                </SelectContent>\n                                            </Select>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                     <FormField control={form.control} name=\"monthSelect\" render={({ field }) => (\n                                         <FormItem>\n                                            <FormLabel>Fiscal Month</FormLabel>\n                                            <Select onValueChange={field.onChange} value={field.value} key={field.value}>\n                                                <FormControl>\n                                                    <SelectTrigger><SelectValue placeholder=\"Select Month\" /></SelectTrigger>\n                                                </FormControl>\n                                                <SelectContent>\n                                                     <SelectItem value=\"1\">JANUARY</SelectItem>\n                                                     <SelectItem value=\"2\">FEBRUARY</SelectItem>\n                                                     <SelectItem value=\"3\">MARCH</SelectItem>\n                                                     <SelectItem value=\"4\">APRIL</SelectItem>\n                                                     <SelectItem value=\"5\">MAY</SelectItem>\n                                                     <SelectItem value=\"6\">JUNE</SelectItem>\n                                                     <SelectItem value=\"7\">JULY</SelectItem>\n                                                     <SelectItem value=\"8\">AUGUST</SelectItem>\n                                                     <SelectItem value=\"9\">SEPTEMBER</SelectItem>\n                                                     <SelectItem value=\"10\">OCTOBER</SelectItem>\n                                                     <SelectItem value=\"11\">NOVEMBER</SelectItem>\n                                                     <SelectItem value=\"12\">DECEMBER</SelectItem>\n                                                </SelectContent>\n                                            </Select>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                </CardContent>\n                            </Card>\n\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle className=\"text-lg\">Registered Name</CardTitle>\n                                </CardHeader>\n                                <CardContent className=\"space-y-4\">\n                                     <FormField control={form.control} name=\"companyName\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Company Name</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                    <FormField control={form.control} name=\"lastName\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Last Name</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                    <FormField control={form.control} name=\"firstName\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>First Name</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                    <FormField control={form.control} name=\"middleName\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Middle Name</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                    <FormField control={form.control} name=\"tradeName\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Trade Name</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                </CardContent>\n                            </Card>\n\n                            <Card>\n                                <CardHeader>\n                                    <CardTitle className=\"text-lg\">Registered Address</CardTitle>\n                                </CardHeader>\n                                <CardContent className=\"space-y-4\">\n                                    <FormField control={form.control} name=\"subStreet\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Sub-street</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                     <FormField control={form.control} name=\"street\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Street</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                     <FormField control={form.control} name=\"barangay\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Barangay</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                     <FormField control={form.control} name=\"cityMunicipality\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>City/Municipality</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                     <FormField control={form.control} name=\"province\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Province</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                     <FormField control={form.control} name=\"zipCode\" render={({ field }) => (\n                                        <FormItem>\n                                            <FormLabel>Zip Code</FormLabel>\n                                            <FormControl><Input {...field} /></FormControl>\n                                            <FormMessage />\n                                        </FormItem>\n                                    )} />\n                                </CardContent>\n                            </Card>\n                        </div>\n                    </div>\n                </form>\n            </Form>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1817, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/header/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { getUserHeaderData } from '@/lib/actions';\nimport { type HeaderData } from '@/ai/schemas';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { HeaderForm } from '@/components/header-form';\nimport { useToast } from '@/hooks/use-toast';\n\nfunction HeaderSkeleton() {\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex items-center justify-between p-6 pb-4 border-b\">\n        <div className=\"flex items-center gap-4\">\n          <Skeleton className=\"h-6 w-24\" />\n          <Skeleton className=\"h-10 w-[250px]\" />\n        </div>\n        <Skeleton className=\"h-10 w-32\" />\n      </div>\n      <div className=\"p-6\">\n        <div className=\"text-center mb-6\">\n          <Skeleton className=\"h-8 w-64 mx-auto\" />\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          <Skeleton className=\"h-96 rounded-lg\" />\n          <Skeleton className=\"h-96 rounded-lg\" />\n          <Skeleton className=\"h-96 rounded-lg\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default function HeaderPage() {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [headerData, setHeaderData] = useState<HeaderData[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const databaseId = sessionStorage.getItem('databaseId');\n\n    if (!databaseId) {\n      toast({\n        title: 'Authentication Error',\n        description: 'You must be logged in to view this page. Redirecting to login.',\n        variant: 'destructive'\n      });\n      router.push('/login');\n      return;\n    }\n\n    async function fetchData() {\n      setIsLoading(true);\n      const result = await getUserHeaderData(databaseId!);\n      if (result.success && result.data) {\n        setHeaderData(result.data);\n      } else {\n        toast({\n          title: 'Failed to Load Data',\n          description: result.error || 'Could not retrieve header information.',\n          variant: 'destructive',\n        });\n      }\n      setIsLoading(false);\n    }\n\n    fetchData();\n  }, [router, toast]);\n\n  if (isLoading) {\n    return <HeaderSkeleton />;\n  }\n\n  return <HeaderForm allData={headerData} />;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AARA;;;;;;;AAUA,SAAS;IACP,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,uIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC,uIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;kCAEtB,6LAAC,uIAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;0BAEtB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,uIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;kCAEtB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,uIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC,uIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC,uIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAK9B;KAtBS;AAwBM,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAC7D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,MAAM,aAAa,eAAe,OAAO,CAAC;YAE1C,IAAI,CAAC,YAAY;gBACf,MAAM;oBACJ,OAAO;oBACP,aAAa;oBACb,SAAS;gBACX;gBACA,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,eAAe;gBACb,aAAa;gBACb,MAAM,SAAS,MAAM,CAAA,GAAA,qJAAA,CAAA,oBAAiB,AAAD,EAAE;gBACvC,IAAI,OAAO,OAAO,IAAI,OAAO,IAAI,EAAE;oBACjC,cAAc,OAAO,IAAI;gBAC3B,OAAO;oBACL,MAAM;wBACJ,OAAO;wBACP,aAAa,OAAO,KAAK,IAAI;wBAC7B,SAAS;oBACX;gBACF;gBACA,aAAa;YACf;YAEA;QACF;+BAAG;QAAC;QAAQ;KAAM;IAElB,IAAI,WAAW;QACb,qBAAO,6LAAC;;;;;IACV;IAEA,qBAAO,6LAAC,uIAAA,CAAA,aAAU;QAAC,SAAS;;;;;;AAC9B;GA1CwB;;QACP,qIAAA,CAAA,YAAS;QACN,+HAAA,CAAA,WAAQ;;;MAFJ","debugId":null}}]
}