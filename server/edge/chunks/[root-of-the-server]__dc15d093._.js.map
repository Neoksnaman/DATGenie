{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\nasync function validateSession(token: string, requestUrl: string): Promise<boolean> {\n    try {\n        const url = new URL('/api/auth/session', requestUrl);\n        // Use a lightweight HEAD request for validation\n        const response = await fetch(url, {\n            method: 'HEAD',\n            headers: {\n                'Cookie': `sessionToken=${token}`\n            }\n        });\n        return response.ok;\n    } catch (error) {\n        console.error('Error validating session in middleware:', error);\n        return false;\n    }\n}\n\n// This function can be marked `async` if using `await` inside\nexport async function middleware(request: NextRequest) {\n    const sessionToken = request.cookies.get('sessionToken')?.value;\n    const { pathname } = request.nextUrl;\n\n    const isAuthPage = pathname === '/login' || pathname === '/signup' || pathname === '/forgot-password' || pathname === '/reset-password';\n\n    // If the user is on an auth page\n    if (isAuthPage) {\n        if (sessionToken && pathname !== '/reset-password') {\n            // Validate the token. If valid, redirect to home.\n            // Allow access to reset-password even if logged in.\n            const isValid = await validateSession(sessionToken, request.url);\n            if (isValid) {\n                return NextResponse.redirect(new URL('/home', request.url));\n            }\n            // If token is invalid, clear it and let them stay on auth page\n            const response = NextResponse.next();\n            response.cookies.delete('sessionToken');\n            return response;\n        }\n        // No token, or on reset-password page, allow access\n        return NextResponse.next();\n    }\n\n    // If the user is on a protected page\n    if (!sessionToken) {\n        // No token, redirect to login\n        return NextResponse.redirect(new URL('/login', request.url));\n    }\n    \n    // Validate the token for protected routes\n    const isValid = await validateSession(sessionToken, request.url);\n    if (!isValid) {\n        // If token is invalid, redirect to login and clear the cookie\n        const response = NextResponse.redirect(new URL('/login', request.url));\n        response.cookies.delete('sessionToken');\n        return response;\n    }\n\n    // If everything is fine, allow access\n    return NextResponse.next();\n}\n\n// See \"Matching Paths\" below to learn more\nexport const config = {\n  matcher: [\n    '/home/:path*',\n    '/profile/:path*',\n    '/tax-profiles/:path*',\n    '/dat-files/:path*',\n    '/template/:path*',\n    '/login',\n    '/signup',\n    '/forgot-password',\n    '/reset-password',\n  ],\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;;AAGA,eAAe,gBAAgB,KAAa,EAAE,UAAkB;IAC5D,IAAI;QACA,MAAM,MAAM,IAAI,IAAI,qBAAqB;QACzC,gDAAgD;QAChD,MAAM,WAAW,MAAM,MAAM,KAAK;YAC9B,QAAQ;YACR,SAAS;gBACL,UAAU,CAAC,aAAa,EAAE,OAAO;YACrC;QACJ;QACA,OAAO,SAAS,EAAE;IACtB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,2CAA2C;QACzD,OAAO;IACX;AACJ;AAGO,eAAe,WAAW,OAAoB;IACjD,MAAM,eAAe,QAAQ,OAAO,CAAC,GAAG,CAAC,iBAAiB;IAC1D,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,MAAM,aAAa,aAAa,YAAY,aAAa,aAAa,aAAa,sBAAsB,aAAa;IAEtH,iCAAiC;IACjC,IAAI,YAAY;QACZ,IAAI,gBAAgB,aAAa,mBAAmB;YAChD,kDAAkD;YAClD,oDAAoD;YACpD,MAAM,UAAU,MAAM,gBAAgB,cAAc,QAAQ,GAAG;YAC/D,IAAI,SAAS;gBACT,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,SAAS,QAAQ,GAAG;YAC7D;YACA,+DAA+D;YAC/D,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI;YAClC,SAAS,OAAO,CAAC,MAAM,CAAC;YACxB,OAAO;QACX;QACA,oDAAoD;QACpD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC5B;IAEA,qCAAqC;IACrC,IAAI,CAAC,cAAc;QACf,8BAA8B;QAC9B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC9D;IAEA,0CAA0C;IAC1C,MAAM,UAAU,MAAM,gBAAgB,cAAc,QAAQ,GAAG;IAC/D,IAAI,CAAC,SAAS;QACV,8DAA8D;QAC9D,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QACpE,SAAS,OAAO,CAAC,MAAM,CAAC;QACxB,OAAO;IACX;IAEA,sCAAsC;IACtC,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC5B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;AACH"}}]
}