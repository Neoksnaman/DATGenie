{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions/users.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { getAllUsers, updateUserDataInSheet } from '../googlesheets';\nimport type { UserDetails, UserUpdateData } from '../schemas';\n\nconst UserDetailsResultSchema = z.object({\n    success: z.boolean(),\n    data: z.object({\n        userName: z.string(),\n        email: z.string().email(),\n    }).nullable(),\n    error: z.string().nullable(),\n});\ntype UserDetailsResult = z.infer<typeof UserDetailsResultSchema>;\n\n\nexport async function getUserDetails(userName: string): Promise<UserDetailsResult> {\n    try {\n        const users = await getAllUsers();\n        const user = users.find(u => u.userName === userName);\n\n        if (user) {\n            return {\n                success: true,\n                data: {\n                    userName: user.userName,\n                    email: user.emailAddress,\n                },\n                error: null,\n            };\n        } else {\n            return { success: false, data: null, error: 'User not found.' };\n        }\n    } catch(e) {\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { success: false, data: null, error: `Failed to fetch user details: ${errorMessage}` };\n    }\n}\n\nconst SimpleResultSchema = z.object({\n    success: z.boolean(),\n    error: z.string().nullable(),\n});\ntype SimpleResult = z.infer<typeof SimpleResultSchema>;\n\nexport async function updateUserDetails(currentUserName: string, updates: UserUpdateData): Promise<SimpleResult> {\n    try {\n        if (!currentUserName) {\n            return { success: false, error: \"Current username is required to identify the user.\" };\n        }\n        \n        await updateUserDataInSheet(currentUserName, updates);\n\n        return { success: true, error: null };\n    } catch (e) {\n        console.error(`Error updating user details for ${currentUserName}:`, e);\n        const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n        return { success: false, error: errorMessage };\n    }\n}\n"],"names":[],"mappings":";;;;;;IA+CsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/profile/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect, useTransition } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\nimport { Loader2 } from 'lucide-react';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { getUserDetails, updateUserDetails } from '@/lib/actions/users';\n\nconst profileSchema = z.object({\n  currentUserName: z.string(), // Hidden field to know who we're updating\n  userName: z.string()\n    .min(3, 'Username must be at least 3 characters')\n    .regex(/^[a-zA-Z0-9_]+$/, 'Username can only contain letters, numbers, and underscores (_).'),\n  email: z.string().email(),\n});\n\nconst passwordSchema = z.object({\n    currentUserName: z.string(),\n    currentPassword: z.string().min(1, 'Current password is required'),\n    newPassword: z.string().min(6, 'New password must be at least 6 characters'),\n    confirmPassword: z.string().min(6, 'Please confirm your new password'),\n}).refine((data) => data.newPassword === data.confirmPassword, {\n    message: \"Passwords don't match\",\n    path: ['confirmPassword'],\n});\n\ntype ProfileFormValues = z.infer<typeof profileSchema>;\ntype PasswordFormValues = z.infer<typeof passwordSchema>;\n\nexport default function ProfilePage() {\n  const { toast } = useToast();\n  const [isProfilePending, startProfileTransition] = useTransition();\n  const [isPasswordPending, startPasswordTransition] = useTransition();\n  const [currentUserName, setCurrentUserName] = useState<string>('');\n  const [currentUserEmail, setCurrentUserEmail] = useState<string>('');\n\n  const profileForm = useForm<ProfileFormValues>({\n    resolver: zodResolver(profileSchema),\n    defaultValues: {\n        currentUserName: '',\n        userName: '',\n        email: '',\n    },\n  });\n\n  const passwordForm = useForm<PasswordFormValues>({\n    resolver: zodResolver(passwordSchema),\n    defaultValues: {\n      currentUserName: '',\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n    },\n  });\n\n  useEffect(() => {\n    const userName = localStorage.getItem('userName') || '';\n    const userEmail = localStorage.getItem('userEmail') || '';\n    \n    setCurrentUserName(userName);\n    setCurrentUserEmail(userEmail);\n    \n    if(userName) {\n        profileForm.reset({\n            currentUserName: userName,\n            userName: userName,\n            email: userEmail,\n        });\n        passwordForm.setValue('currentUserName', userName);\n    }\n  }, [profileForm, passwordForm]);\n\n  const onProfileSubmit: SubmitHandler<ProfileFormValues> = (data) => {\n    startProfileTransition(async () => {\n      // Prevent submitting if the username hasn't changed\n      if (data.userName === data.currentUserName) {\n        toast({\n          title: 'No Changes',\n          description: 'The new username is the same as the current one.',\n        });\n        return;\n      }\n      const result = await updateUserDetails(data.currentUserName, { newUserName: data.userName });\n      if (result.success) {\n        toast({\n          title: 'Profile Updated',\n          description: 'Your username has been successfully updated.',\n        });\n        localStorage.setItem('userName', data.userName); // Update local storage\n        profileForm.reset({\n            currentUserName: data.userName,\n            userName: data.userName,\n            email: data.email,\n        });\n        passwordForm.setValue('currentUserName', data.userName);\n      } else {\n        toast({\n          title: 'Update Failed',\n          description: result.error,\n          variant: 'destructive',\n        });\n      }\n    });\n  };\n\n  const onPasswordSubmit: SubmitHandler<PasswordFormValues> = (data) => {\n    startPasswordTransition(async () => {\n      const result = await updateUserDetails(data.currentUserName, {\n        currentPassword: data.currentPassword,\n        newPassword: data.newPassword,\n      });\n\n      if (result.success) {\n        toast({\n          title: 'Password Updated',\n          description: 'Your password has been changed successfully.',\n        });\n        passwordForm.reset({\n            currentUserName: data.currentUserName,\n            currentPassword: '',\n            newPassword: '',\n            confirmPassword: '',\n        });\n      } else {\n        toast({\n          title: 'Update Failed',\n          description: result.error,\n          variant: 'destructive',\n        });\n      }\n    });\n  };\n  \n  if (!currentUserName) {\n    return (\n        <div className=\"flex items-center justify-center h-full\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        </div>\n    )\n  }\n\n  return (\n    <div className=\"p-4 md:p-6 space-y-6\">\n      <div className=\"space-y-1\">\n          <h1 className=\"text-3xl font-bold\">My Profile</h1>\n          <p className=\"text-muted-foreground\">Manage your profile and account settings.</p>\n      </div>\n      \n      <div className=\"space-y-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Profile Information</CardTitle>\n            <CardDescription>Update your username and view your email address.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Form {...profileForm}>\n              <form onSubmit={profileForm.handleSubmit(onProfileSubmit)} className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormField\n                    control={profileForm.control}\n                    name=\"userName\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Username</FormLabel>\n                        <FormControl>\n                          <Input {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={profileForm.control}\n                    name=\"email\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Email</FormLabel>\n                        <FormControl>\n                          <Input {...field} disabled />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n                 <div className=\"flex justify-end pt-2\">\n                    <Button type=\"submit\" disabled={isProfilePending}>\n                        {isProfilePending && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                        Save Changes\n                    </Button>\n                </div>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Change Password</CardTitle>\n            <CardDescription>Enter your current password to set a new one.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Form {...passwordForm}>\n              <form onSubmit={passwordForm.handleSubmit(onPasswordSubmit)} className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <FormField\n                    control={passwordForm.control}\n                    name=\"currentPassword\"\n                    render={({ field }) => (\n                        <FormItem>\n                        <FormLabel>Current Password</FormLabel>\n                        <FormControl>\n                            <Input type=\"password\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                        </FormItem>\n                    )}\n                    />\n                    <FormField\n                    control={passwordForm.control}\n                    name=\"newPassword\"\n                    render={({ field }) => (\n                        <FormItem>\n                        <FormLabel>New Password</FormLabel>\n                        <FormControl>\n                            <Input type=\"password\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                        </FormItem>\n                    )}\n                    />\n                    <FormField\n                    control={passwordForm.control}\n                    name=\"confirmPassword\"\n                    render={({ field }) => (\n                        <FormItem>\n                        <FormLabel>Confirm New Password</FormLabel>\n                        <FormControl>\n                            <Input type=\"password\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                        </FormItem>\n                    )}\n                    />\n                </div>\n                <div className=\"flex justify-end pt-2\">\n                    <Button type=\"submit\" disabled={isPasswordPending}>\n                        {isPasswordPending && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                        Change Password\n                    </Button>\n                </div>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}