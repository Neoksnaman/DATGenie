{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/schemas.ts"],"sourcesContent":["/**\n * @fileOverview Shared Zod schemas and TypeScript types for AI flows.\n */\nimport {z} from 'genkit';\n\nexport const ExcelErrorDetectionInputSchema = z.object({\n  excelDataUri: z\n    .string()\n    .describe(\n      \"The Excel file data as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type ExcelErrorDetectionInput = z.infer<typeof ExcelErrorDetectionInputSchema>;\n\nexport const ExcelErrorDetectionOutputSchema = z.object({\n  errors: z\n    .array(z.string())\n    .describe('A list of potential errors and inconsistencies found in the Excel file.'),\n  suggestions: z\n    .array(z.string())\n    .describe('A list of suggestions to fix the errors and inconsistencies.'),\n});\nexport type ExcelErrorDetectionOutput = z.infer<typeof ExcelErrorDetectionOutputSchema>;\n"],"names":[],"mappings":"AAAA;;CAEC;;;;AACD;AAAA;;AAEO,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CACP;AAEN;AAGO,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtD,QAAQ,uIAAA,CAAA,IAAC,CACN,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;IACZ,aAAa,uIAAA,CAAA,IAAC,CACX,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/excel-error-detection.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Analyzes an Excel file for potential errors and inconsistencies using AI.\n *\n * - excelErrorDetection - A function that handles the Excel file analysis process.\n */\n\nimport {ai} from '@/ai/genkit';\nimport type { ExcelErrorDetectionInput } from '@/ai/schemas';\nimport { ExcelErrorDetectionInputSchema, ExcelErrorDetectionOutputSchema } from '@/ai/schemas';\nimport type { ExcelErrorDetectionOutput } from '@/ai/schemas';\n\n\nexport async function excelErrorDetection(input: ExcelErrorDetectionInput): Promise<ExcelErrorDetectionOutput> {\n  return excelErrorDetectionFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'excelErrorDetectionPrompt',\n  input: {schema: ExcelErrorDetectionInputSchema},\n  output: {schema: ExcelErrorDetectionOutputSchema},\n  prompt: `You are an AI assistant that analyzes Excel files for potential errors and inconsistencies.\n\nYou will receive the Excel file data as a data URI.\n\nAnalyze the Excel data and identify any potential errors, inconsistencies, or formatting issues that might cause problems during conversion to .DAT or PDF formats.\n\nProvide a list of errors and a list of suggestions to fix them.\n\nExcel Data: {{media url=excelDataUri}}\n\nErrors:\n{{errors}}\n\nSuggestions:\n{{suggestions}}`,\n});\n\nconst excelErrorDetectionFlow = ai.defineFlow(\n  {\n    name: 'excelErrorDetectionFlow',\n    inputSchema: ExcelErrorDetectionInputSchema,\n    outputSchema: ExcelErrorDetectionOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;CAIC,GAED;AAEA;;;;;;AAIO,eAAe,oBAAoB,KAA+B;IACvE,OAAO,wBAAwB;AACjC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ,oHAAA,CAAA,iCAA8B;IAAA;IAC9C,QAAQ;QAAC,QAAQ,oHAAA,CAAA,kCAA+B;IAAA;IAChD,QAAQ,CAAC;;;;;;;;;;;;;;eAcI,CAAC;AAChB;AAEA,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC3C;IACE,MAAM;IACN,aAAa,oHAAA,CAAA,iCAA8B;IAC3C,cAAc,oHAAA,CAAA,kCAA+B;AAC/C,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAlCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/googlesheets.ts"],"sourcesContent":["import { google } from 'googleapis';\nimport { z } from 'zod';\n\nconst signupSchema = z.object({\n  firstName: z.string(),\n  lastName: z.string(),\n  email: z.string().email(),\n  password: z.string(),\n});\n\nexport type UserData = z.infer<typeof signupSchema>;\n\nconst {\n  GOOGLE_SHEETS_CLIENT_EMAIL,\n  GOOGLE_SHEETS_PRIVATE_KEY,\n  GOOGLE_SHEETS_SHEET_ID,\n} = process.env;\n\nif (!GOOGLE_SHEETS_CLIENT_EMAIL || !GOOGLE_SHEETS_PRIVATE_KEY || !GOOGLE_SHEETS_SHEET_ID) {\n  throw new Error('Google Sheets API credentials are not configured in .env');\n}\n\nconst auth = new google.auth.GoogleAuth({\n  credentials: {\n    client_email: GOOGLE_SHEETS_CLIENT_EMAIL,\n    private_key: GOOGLE_SHEETS_PRIVATE_KEY.replace(/\\\\n/g, '\\n'),\n  },\n  scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n});\n\nconst sheets = google.sheets({ version: 'v4', auth });\n\nexport async function appendUserToSheet(userData: UserData) {\n  const { firstName, lastName, email, password } = userData;\n  const timestamp = new Date().toISOString();\n\n  const values = [[firstName, lastName, email, password, timestamp]];\n\n  const request = {\n    spreadsheetId: GOOGLE_SHEETS_SHEET_ID,\n    range: 'A1', // Appends to the first empty row of the sheet\n    valueInputOption: 'USER_ENTERED',\n    resource: {\n      values,\n    },\n  };\n\n  try {\n    const response = await sheets.spreadsheets.values.append(request);\n    console.log('Appended to sheet:', response.data);\n    return response.data;\n  } catch (err) {\n    console.error('The API returned an error: ' + err);\n    throw new Error('Failed to append data to Google Sheet.');\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5B,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;IACvB,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM;AACpB;AAIA,MAAM,EACJ,0BAA0B,EAC1B,yBAAyB,EACzB,sBAAsB,EACvB,GAAG,QAAQ,GAAG;AAEf,IAAI,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,wBAAwB;IACxF,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,OAAO,IAAI,mJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IACtC,aAAa;QACX,cAAc;QACd,aAAa,0BAA0B,OAAO,CAAC,QAAQ;IACzD;IACA,QAAQ;QAAC;KAA+C;AAC1D;AAEA,MAAM,SAAS,mJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;IAAE,SAAS;IAAM;AAAK;AAE5C,eAAe,kBAAkB,QAAkB;IACxD,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;IACjD,MAAM,YAAY,IAAI,OAAO,WAAW;IAExC,MAAM,SAAS;QAAC;YAAC;YAAW;YAAU;YAAO;YAAU;SAAU;KAAC;IAElE,MAAM,UAAU;QACd,eAAe;QACf,OAAO;QACP,kBAAkB;QAClB,UAAU;YACR;QACF;IACF;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;QACzD,QAAQ,GAAG,CAAC,sBAAsB,SAAS,IAAI;QAC/C,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM,IAAI,MAAM;IAClB;AACF","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { excelErrorDetection } from '@/ai/flows/excel-error-detection';\nimport { ExcelErrorDetectionOutputSchema, type ExcelErrorDetectionOutput } from '@/ai/schemas';\nimport { z } from 'zod';\nimport { appendUserToSheet, type UserData } from './googlesheets';\n\nconst AnalyzeFileResultSchema = z.object({\n  success: z.boolean(),\n  data: ExcelErrorDetectionOutputSchema.nullable(),\n  error: z.string().nullable(),\n});\n\ntype AnalyzeFileResult = z.infer<typeof AnalyzeFileResultSchema>;\n\nexport async function analyzeExcelFile(\n  formData: FormData\n): Promise<AnalyzeFileResult> {\n  const file = formData.get('file') as File | null;\n\n  if (!file) {\n    return { success: false, data: null, error: 'No file uploaded.' };\n  }\n\n  // Check file type\n  if (file.type !== 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' && file.type !== 'application/vnd.ms-excel') {\n    return { success: false, data: null, error: 'Invalid file type. Please upload an Excel file.' };\n  }\n  \n  try {\n    const bytes = await file.arrayBuffer();\n    const buffer = Buffer.from(bytes);\n    const dataUri = `data:${file.type};base64,${buffer.toString('base64')}`;\n\n    const result = await excelErrorDetection({ excelDataUri: dataUri });\n\n    return { success: true, data: result, error: null };\n  } catch (e) {\n    console.error(e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { success: false, data: null, error: `Failed to analyze file: ${errorMessage}` };\n  }\n}\n\nconst SignUpResultSchema = z.object({\n    success: z.boolean(),\n    error: z.string().nullable(),\n});\n\ntype SignUpResult = z.infer<typeof SignUpResultSchema>;\n\nexport async function signUpUser(userData: UserData): Promise<SignUpResult> {\n  try {\n    await appendUserToSheet(userData);\n    return { success: true, error: null };\n  } catch (e) {\n    console.error('Error signing up user:', e);\n    const errorMessage = e instanceof Error ? e.message : 'An unknown error occurred.';\n    return { success: false, error: `Failed to sign up: ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,0BAA0B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,SAAS,oIAAA,CAAA,IAAC,CAAC,OAAO;IAClB,MAAM,oHAAA,CAAA,kCAA+B,CAAC,QAAQ;IAC9C,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC5B;AAIO,eAAe,iBACpB,QAAkB;IAElB,MAAM,OAAO,SAAS,GAAG,CAAC;IAE1B,IAAI,CAAC,MAAM;QACT,OAAO;YAAE,SAAS;YAAO,MAAM;YAAM,OAAO;QAAoB;IAClE;IAEA,kBAAkB;IAClB,IAAI,KAAK,IAAI,KAAK,uEAAuE,KAAK,IAAI,KAAK,4BAA4B;QACjI,OAAO;YAAE,SAAS;YAAO,MAAM;YAAM,OAAO;QAAkD;IAChG;IAEA,IAAI;QACF,MAAM,QAAQ,MAAM,KAAK,WAAW;QACpC,MAAM,SAAS,OAAO,IAAI,CAAC;QAC3B,MAAM,UAAU,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE,OAAO,QAAQ,CAAC,WAAW;QAEvE,MAAM,SAAS,MAAM,CAAA,GAAA,iJAAA,CAAA,sBAAmB,AAAD,EAAE;YAAE,cAAc;QAAQ;QAEjE,OAAO;YAAE,SAAS;YAAM,MAAM;YAAQ,OAAO;QAAK;IACpD,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC;QACd,MAAM,eAAe,aAAa,QAAQ,EAAE,OAAO,GAAG;QACtD,OAAO;YAAE,SAAS;YAAO,MAAM;YAAM,OAAO,CAAC,wBAAwB,EAAE,cAAc;QAAC;IACxF;AACF;AAEA,MAAM,qBAAqB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChC,SAAS,oIAAA,CAAA,IAAC,CAAC,OAAO;IAClB,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC9B;AAIO,eAAe,WAAW,QAAkB;IACjD,IAAI;QACF,MAAM,CAAA,GAAA,0HAAA,CAAA,oBAAiB,AAAD,EAAE;QACxB,OAAO;YAAE,SAAS;YAAM,OAAO;QAAK;IACtC,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,0BAA0B;QACxC,MAAM,eAAe,aAAa,QAAQ,EAAE,OAAO,GAAG;QACtD,OAAO;YAAE,SAAS;YAAO,OAAO,CAAC,mBAAmB,EAAE,cAAc;QAAC;IACvE;AACF;;;IA7CsB;IAoCA;;AApCA,+OAAA;AAoCA,+OAAA","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {analyzeExcelFile as '40eadca5c4f32c710e73aff0bf3f9fa61fc3c2f4cb'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 593, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}